/* eslint-disable no-console */
import algosdk from 'algosdk'
import { ReactNode, useState } from 'react'
import { {{ className }}Client, MethodArgs } from '{{ clientPath }}'

type Props = {
  algodClient: algosdk.Algodv2
  appID: number
  buttonClass: string
  buttonLoadingNode?: ReactNode
  buttonNode: ReactNode
  typedClient: {{ className }}Client
  args: MethodArgs<'{{ methodSignature }}'>
}

const {{ className }}{{ methodName | capitalize}} = (props: Props) => {
  const [loading, setLoading] = useState<boolean>(false)

  const callMethod = async () => {
    setLoading(true)
    alert(`Calling {{ methodName }} with args: ${JSON.stringify(props.args)}`)
    await props.typedClient.{{ methodName }}(props.args)
    setLoading(false)
  }

  {% raw %}return (
    <button className={props.buttonClass} onClick={callMethod}>
      {loading ? props.buttonLoadingNode || props.buttonNode : props.buttonNode}
    </button>
  ){% endraw %}
}

export default {{ className }}{{ methodName | capitalize }}